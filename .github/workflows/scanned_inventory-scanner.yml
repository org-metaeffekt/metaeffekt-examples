name: Scan inventory

on:
  workflow_dispatch:
    inputs:
      inventory-path:
        description: "The inventory path."
        required: true
        default: keycloak-25.0.4/03-advised
      inventory-file-name:
        description: "The file name of the inventory with extension."
        required: true
        default: keycloak-25.0.4-advised.xls

  workflow_call:
    inputs:
      inventory-path:
        description: "The inventory path."
        required: true
        type: string
      inventory-file-name:
        description: "The file name of the inventory with extension."
        required: true
        type: string

    outputs:
      scanned-inventory:
        value: ${{ jobs.scan-inventory.outputs.scanned-inventory }}

jobs:
  scan-inventory:
    runs-on: ubuntu-latest
    outputs:
      scanned-inventory: ${{ steps.scan.outputs.scanned-inventory }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup java environment
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: 'maven'
          cache-dependency-path: './processors/processor-parent.xml'

      - name: Configure runner
        uses: ./.github/actions/util/configure-runner
        with:
          maven: true

      - name: Extract file name
        id: process-input
        uses: ./.github/actions/util/extract-file-name
        with:
          file-path: ${{ inputs.inventory-path }}

      - name: Scan inventory
        id: scan
        uses: ./.github/actions/scanned/scan-inventory
        with:
          input-directory: ../${{ inputs.inventory-path }}
          input-file-name: ${{ inputs.inventory-file-name }}
          output-directory: /tmp/scanned/inventories

      - name: Transfer and rename inventory
        shell: bash
        run: |
          source_dir="/tmp/scanned/inventories"
          destination="../${{ steps.process-input.outputs.asset-name }}/04-scanned/${{ steps.process-input.outputs.asset-name }}-scanned.xls"
          file=$(find "$source_dir" -type f -name "*.xlsx" | head -n 1)
          if [ -n "$file" ]; then
            mkdir -p "$(dirname "$destination")"
            mv "$file" "$destination"
          else
            echo "No .xlsx file found in $source_dir"
            exit 1
          fi

      - uses: ./.github/actions/util/push-to-repository # Configures git and pushes changes.
